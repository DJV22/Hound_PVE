Installing WordPress with a LAMP stack on Debian 12
make usre your datasets and mountpoints are created and verified
create dataset for each domain with the following commands
zfs create fileserver/crafthoundgaming
zfs create fileserver/overthehillstead





sudo apt update && sudo apt upgrade -y
    sudo apt install apache2 -y
    sudo apt install mariadb-server mariadb-client -y
    sudo mysql_secure_installation
    sudo apt install php libapache2-mod-php php-mysql php-cli php-fpm php-json php-common php-mbstring php-xmlrpc php-soap php-gd php-xml php-intl php-zip php-curl -y

    sudo a2enmod php8.2 # Replace 8.x with your installed PHP version
    sudo a2enmod rewrite
    sudo systemctl restart apache2

Create a MariaDB Database for WordPress:
Log in to MariaDB.
    sudo mysql -u root -p
Each database below is specific to each domain
WP_CHG = crafthoundgaming.com
WP_OTH = overthehillstead.com

    CREATE DATABASE wp_chg_db;
    CREATE USER 'chg_user'@'localhost' IDENTIFIED BY 'z7hHyFLKnvQvgb3nvHPNtTgvG';
    GRANT ALL PRIVILEGES ON wp_chg_db.* TO 'chg_user'@'localhost';
    FLUSH PRIVILEGES;
    EXIT;

    CREATE DATABASE wp_oth_db;
    CREATE USER 'oth_user'@'localhost' IDENTIFIED BY 'TijVQcEhNx2bbfDtoXjc3Jk9H';
    GRANT ALL PRIVILEGES ON wp_oth_db.* TO 'oth_user'@'localhost';
    FLUSH PRIVILEGES;
    EXIT;

3. Download and Configure WordPress:
Download WordPress.
    mkdir /temp
    cd /temp
    wget https://wordpress.org/latest.tar.gz
    tar -xzvf latest.tar.gz
Move WordPress files to the Apache web root for crafthoundgaming.com:
    mv wordpress /var/www/html/crafthoundgaming
do the same for overthehillstead.com
    tar -xzvf latest.tar.gz
Move WordPress files to the Apache web root for overthehillstead.com:
    mv wordpress /var/www/html/overthehillstead

Set correct permissions for crafthoundgaming and overthehillstead.
crafthoundgaming.com
    chown -R www-data:www-data /var/www/html/crafthoundgaming
    chmod -R 755 /var/www/html/crafthoundgaming
overthehillstead.com
    chown -R www-data:www-data /var/www/html/overthehillstead
    chmod -R 755 /var/www/html/overthehillstead

Create WordPress configuration file for each created domain.
crafthoundgaming.com
    cd /var/www/html/crafthoundgaming
    cp wp-config-sample.php wp-config.php
overthehillstead.com
    cd /var/www/html/overthehillstead
    cp wp-config-sample.php wp-config.php
Edit wp-config.php for each domain.
    nano wp-config.php
Update the database details with the ones you created:
sample
    define( 'DB_NAME', 'wordpress_db' );
    define( 'DB_USER', 'wordpress_user' );
    define( 'DB_PASSWORD', 'your_strong_password' );
crafthoundgaming.com
    define( 'DB_NAME', 'wp_chg_db' );
    define( 'DB_USER', 'chg_user' );
    define( 'DB_PASSWORD', 'PASSWORD' );
overthehillstead.com
    define( 'DB_NAME', 'wp_db' );
    define( 'DB_USER', 'oth_user' );
    define( 'DB_PASSWORD', 'PASSWORD' );

Generate unique salts and keys from the WordPress API and paste them into wp-config.php.

crafthoundgaming.com
define('AUTH_KEY',         '02>^>-o-lJnw`t2s314LC8 !rmT#Njg|7Le=EsMXM4M0,w;*<+-^FY$(~@y(za5L');
define('SECURE_AUTH_KEY',  '_Ozl%n}9iY%uMzfW@^6!%?;&Hd_n8DjvM[8WUqYUtj9Nnw/Dx7@-,ES%`mMvA{hM');
define('LOGGED_IN_KEY',    '(dpP-T!5V=nPP<(l9GVBwq1<TSp-K-Rh4s+U{c^Ax}&6It,e{&*{7|4cFCrTh)3w');
define('NONCE_KEY',        'dmJ}!k[m5>9N-z-iZ+;aF|O2/23*~UTS@>?V$22U$Q+ILKF;+.,M{lu:;G([DYmd');
define('AUTH_SALT',        'Rzm0iCwQ3OH/ChW9=ts=Ol1poZgzB&Xm!;d9YR`{/OLy`ERa@go7YT+b ..F/xw;');
define('SECURE_AUTH_SALT', '{~GyLgg0/S_-FUjWoH[g($g/JHiVM$upeNvuuSD`(#+[NBE+G`rD?V4Jc)mE%i>Y');
define('LOGGED_IN_SALT',   '`fe8#+<DXGFESU}T(l[0&*zHAB9I~qu?CO<XnUV3S,xsFQmoRXX<9Y|9}b;<.|u@');
define('NONCE_SALT',       '{qvw_B%[o7qGSz1$]vs|2Px}<_L14y5+-mDRV;8ziKy-~7ow*kMpObvbdd;i:*rp');

overthehillstead.com
define('AUTH_KEY',         'f-:)bi{z3nk437WNlh;4b)kA`}6mgR]/q%7,[hb4R97zH@2:Il_!KEtUY$(7RhAq');
define('SECURE_AUTH_KEY',  '7SW]j]r8FzdS[][9IS}Z_Eygp%n{.@+J0I5-?/JZFxrT(S02z+p&0g>|SSf7}!tj');
define('LOGGED_IN_KEY',    'wC@FMKm3Jo5P#+ySe{4C-b}.w!e<|!oz.p-laZ{gv`u$y[70?~bn{|-B{K+JG}@[');
define('NONCE_KEY',        'rtP2AmIak^N6-%zer-7+djY;A _8<;ra-W|Vw|+ed{J(%RGYlK@O)D`V0[?&yj/s');
define('AUTH_SALT',        'ekxusz5p>L0mSjPY=*mg|%Ig%Z#:w;~+A~A&?(4d=,sy/2:<C9[#!&,SD&7rG.b;');
define('SECURE_AUTH_SALT', 'weNt`Aet^,!#IQV^y:g#Q|=D wV{R!~I/z,PbB5g|jd0-R,K$1;vDuMqd;-P[^qW');
define('LOGGED_IN_SALT',   ']~@O[^Kcg]`^:st&<JMqDVLhwXrS8,IPRt;R+{jq6mRRM2]&nd3*&>JljGJbV*7l');
define('NONCE_SALT',       'A5{Mn!Y)hMWEuV6S~RRafNj>Cp@|o~pIs|A3Rq>XxX8/&|)Uy2 rx5k8e PEw*e-');

configure apache to complete wordpress installation
nano /etc/apache2/sites-available/your_domain.conf

crafthoundgaming.com
nano /etc/apache2/sites-available/crafthoundgaming.conf

overthehillstead.com
sudo nano /etc/apache2/sites-available/ovethehillstead.conf



=== unedited notes from AI ===

Installing WordPress with a LAMP (Linux, Apache, MySQL/MariaDB, PHP) stack on Debian 12 involves several steps:
1. Install the LAMP Stack:
Update your system.
Code

    sudo apt update && sudo apt upgrade -y
Install Apache.
Code

    sudo apt install apache2 -y
Install MariaDB (or MySQL).
Code

    sudo apt install mariadb-server mariadb-client -y
Secure MariaDB.
Code

    sudo mysql_secure_installation
Follow the prompts to set a root password, remove anonymous users, disallow remote root login, and remove the test database. Install PHP and necessary extensions.
Code

    sudo apt install php libapache2-mod-php php-mysql php-cli php-fpm php-json php-common php-mbstring php-xmlrpc php-soap php-gd php-xml php-intl php-zip php-curl -y
Enable Apache modules (if not already enabled):
Code

    sudo a2enmod php8.x # Replace 8.x with your installed PHP version
    sudo a2enmod rewrite
    sudo systemctl restart apache2
2. Create a MariaDB Database for WordPress:
Log in to MariaDB.
Code

    sudo mysql -u root -p
Enter the root password you set during mysql_secure_installation.
Create a database and user for WordPress:
Code

    CREATE DATABASE wordpress_db;
    CREATE USER 'wordpress_user'@'localhost' IDENTIFIED BY 'your_strong_password';
    GRANT ALL PRIVILEGES ON wordpress_db.* TO 'wordpress_user'@'localhost';
    FLUSH PRIVILEGES;
    EXIT;
Replace wordpress_db, wordpress_user, and your_strong_password with your desired values.
3. Download and Configure WordPress:
Download WordPress.
Code

    cd /tmp
    wget https://wordpress.org/latest.tar.gz
    tar -xzvf latest.tar.gz
Move WordPress files to the Apache web root:
Code

    sudo mv wordpress /var/www/html/your_domain_name # Replace your_domain_name with your actual domain or desired directory name
Set correct permissions.
Code

    sudo chown -R www-data:www-data /var/www/html/your_domain_name
    sudo chmod -R 755 /var/www/html/your_domain_name
Create WordPress configuration file.
Code

    cd /var/www/html/your_domain_name
    sudo cp wp-config-sample.php wp-config.php
Edit wp-config.php.
Code

    sudo nano wp-config.php
Update the database details with the ones you created:
Code

    define( 'DB_NAME', 'wordpress_db' );
    define( 'DB_USER', 'wordpress_user' );
    define( 'DB_PASSWORD', 'your_strong_password' );
Generate unique salts and keys from the WordPress API and paste them into wp-config.php.
4. Complete WordPress Installation via Web Interface:
Open your web browser and navigate to http://your_server_ip_address/your_domain_name (or http://your_domain_name if you configured a virtual host).
Follow the on-screen instructions to complete the WordPress installation, including setting up the site title, admin username, password, and email.
